---
layout: post
title:  "For of Loop"
date:   2023-05-02 00:45:33 +0900
categories: Group&nbsp;:&nbsp;JavaScript JavaScript
---

### for-of문
{% highlight javascript %}
    const test = ["testA", "testB", "testC"];

    for(const t of test){
        console.log(t);
    }

    //결과
    //출력 1 : testA
    //출력 2 : testB
    //출력 3 : testC

    //1. var or let or const로 자료형을 선언한다.
    //2. 배열에 접근할 수 있는 변수의 이름을 정한다.
    //3. of를 작성한 다음에 접근할 배열의 이름을 작성한다.
{% endhighlight %}


### forEach문
- 기본적인 forEach문
{% highlight javascript %}
    const test = ["testA", "testB", "testC"];

    test.forEach((element, index, nowArray)=>{
        console.log("현재 요소 :", element, ", 현재 인덱스 :", index, ", 현재 배열 :", test);
    });

    //결과
    //출력 1 : 현재 요소 : testA , 현재 인덱스 : 0 , 현재 배열 : (3) ["testA", "testB", "testC"]
    //출력 2 : 현재 요소 : testB , 현재 인덱스 : 1 , 현재 배열 : (3) ["testA", "testB", "testC"]
    //출력 3 : 현재 요소 : testC , 현재 인덱스 : 2 , 현재 배열 : (3) ["testA", "testB", "testC"]

    //첫번째 인자는 배열의 값에 접근하는 변수의 이름이다.
    //두번째 인자는 배열의 값이 가지고 있는 인덱스 번호다.
    //세번째 인자는 현재 접근 중인 배열이다.
{% endhighlight %}

- Arrow Function을 이용한 forEach문
{% highlight javascript %}
    const test = ["testA", "testB", "testC"];

    const testArrow = (element, index, nowArray) => {
        console.log("현재 요소 :", element, ", 현재 인덱스 :", index, ", 현재 배열 :", test);
    };

    test.forEach(testArrow);

    //결과
    //출력 1 : 현재 요소 : testA , 현재 인덱스 : 0 , 현재 배열 : (3) ["testA", "testB", "testC"]
    //출력 2 : 현재 요소 : testB , 현재 인덱스 : 1 , 현재 배열 : (3) ["testA", "testB", "testC"]
    //출력 3 : 현재 요소 : testC , 현재 인덱스 : 2 , 현재 배열 : (3) ["testA", "testB", "testC"]

    //값이 자동으로 주입되서 실행된다.
{% endhighlight %}