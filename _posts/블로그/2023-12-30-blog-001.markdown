---
layout: post
title:  "게시글 작성을 위한 출처 및 참고 문헌"
date:   2023-12-30 23:57:00 +0900
categories: 블로그
tags: [출처, 참고]
---

### 사이트 목록

- [인프런](https://www.inflearn.com/)
- [패스트 캠퍼스](https://fastcampus.co.kr/)
- [노마드 코더](https://nomadcoders.co/)
- [TCP SCHOOL](https://www.tcpschool.com/)

### Java

- 강의 사이트
    - [TCP SCHOOL > JAVA](https://www.tcpschool.com/java/intro)

### JavaScript

- 강의 사이트
    - 노마드 코더
        - [바닐라 JS로 크롬 앱 만들기](https://nomadcoders.co/javascript-for-beginners)
        - [바닐라JS로 그림 앱 만들기](https://nomadcoders.co/javascript-for-beginners-2)
        - [ES6의 정석](https://nomadcoders.co/es6-once-and-for-all)

### jQuery

### Node.js

### React.js

- 강의 사이트
    - 노마드 코더
        - [ReactJS로 영화 웹 서비스 만들기](https://nomadcoders.co/react-for-beginners)
        - [실전형 리액트 Hooks 10개](https://nomadcoders.co/react-hooks-introduction)
        - [https://nomadcoders.co/nwitter](https://nomadcoders.co/nwitter)
        - [초보자를 위한 리덕스 101](https://nomadcoders.co/redux-for-beginners)
        - [왕초보를 위한 React Native 101](https://nomadcoders.co/react-native-for-beginners)

### Spring Framework

- 강의 사이트
    - 인프런
        - [스프링 핵심 원리 - 기본편](https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81-%ED%95%B5%EC%8B%AC-%EC%9B%90%EB%A6%AC-%EA%B8%B0%EB%B3%B8%ED%8E%B8)
        - [스프링 입문 - 코드로 배우는 스프링 부트, 웹 MVC, DB 접근 기술](https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81-%EC%9E%85%EB%AC%B8-%EC%8A%A4%ED%94%84%EB%A7%81%EB%B6%80%ED%8A%B8)
        - [예제로 배우는 스프링 입문 (개정판)](https://www.inflearn.com/course/spring_revised_edition)
        - [스프링 프레임워크 입문](https://www.inflearn.com/course/spring)
        - [자바 ORM 표준 JPA 프로그래밍 - 기본편](https://www.inflearn.com/course/ORM-JPA-Basic)

### Flutter

#### Dart

- 가이드 문서
    - [https://dart-ko.dev/language](https://dart-ko.dev/language)
- 강의 사이트
    - 인프런
        - [[입문] Dart 언어 4시간만에 완전정복](https://www.inflearn.com/course/dart-%EC%96%B8%EC%96%B4-%EC%9E%85%EB%AC%B8)
- 블로그 게시글
    - [[Dart] Future 사용법(동기/비동기 작업 클래스)](https://jinhan38.com/151)
    - [Flutter/Dart 핵심만 쏙 - Stream](https://hack-up-busan.github.io/dart/Stream/)
    - [[Dart]Stream](https://velog.io/@steadygo247/FlutterStream)
    - [[Dart] Isolate 배우기](https://lucky516.tistory.com/85)

### Flutter

- 블로그 게시글
    - [Flutter란 ?(by 신재원님)](https://medium.com/twolinecode/flutter%EB%9E%80-by-%EC%8B%A0%EC%9E%AC%EC%9B%90%EB%8B%98-888a4c472753)
    - [Flutter를 쓰는 이유와 동작 원리](https://velog.io/@okko8522/Flutter%EB%A5%BC-%EC%93%B0%EB%8A%94-%EC%9D%B4%EC%9C%A0%EC%99%80-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC#flutter%EA%B0%80-%EC%8B%A4%ED%96%89%EB%90%98%EB%8A%94-%EA%B3%BC%EC%A0%95)
    - [[Flutter] StatelessWidget, StatefulWidget](https://velog.io/@dosilv/Flutter-StatelessWidget-StatefulWidget)
    - [Flutter 개발 시 StatefulWidget의 생명주기를 알아야하는 이유?](https://devocean.sk.com/blog/techBoardDetail.do?ID=165205&boardType=techBlog)
    - [[Flutter]  Widget Tree / Tree 란 무엇인가?](https://jutole.tistory.com/70#Widget%20Tree-1)
    - [[flutter] 플러터 Widget 트리, Element 트리, RenderObject 트리](https://fronquarry.tistory.com/19)
    - [[플러터] Stateful 생명주기](https://landroid.tistory.com/9)
    - [[Flutter] LifeCycle(생명주기)](https://velog.io/@realryankim/Flutter-LifeCycle%EC%83%9D%EB%AA%85%EC%A3%BC%EA%B8%B0#stateful-widget)
    - [[플러터] pubspec.yaml 정리](https://landroid.tistory.com/11)
    - [플러터(Flutter)의 pubspec.yaml](https://changjoopark.medium.com/%ED%94%8C%EB%9F%AC%ED%84%B0-flutter-%EC%9D%98-pubspec-yaml-ffa40b26296a)
    - [[Flutter] Widget 소개 - SizedBox](https://origogi.github.io/flutter/SizedBox/)
    - [[Flutter] Container Class](https://ahang.tistory.com/10)
    - [[Flutter] Row - 사용법](https://jinhan38.com/129)
    - [[Flutter] Image 이미지 box.fit 옵션 정리](https://devmg.tistory.com/181)
    - [네트워크 이미지 렌더링을 최적화하여 메모리 사용량 절감하기](https://velog.io/@ximya_hf/optimizing-network-image-rendering-in-flutter)
    - [[flutter] Offstage : 위젯을 사라지게 한다](https://velog.io/@iamhch/flutter-Offstage-%EC%9C%84%EC%A0%AF%EC%9D%84-%EC%82%AC%EB%9D%BC%EC%A7%80%EA%B2%8C-%ED%95%9C%EB%8B%A4)

### DataBase

### 이론

#### 데이터베이스

- 서적
    - 데이터베이스 개론 (김연희, 한빛아카데미)
- 블로그 게시글
    - [[Database System] 관계 데이터 연산](https://velog.io/@hylee/DB-%EA%B4%80%EA%B3%84-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%97%B0%EC%82%B0#%EC%9D%BC%EB%B0%98-%EC%A7%91%ED%95%9C-%EC%97%B0%EC%82%B0%EC%9E%90)
    - [데이터베이스 함수 종속성(Functional Dependency)](https://velog.io/@busybean3/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%ED%95%A8%EC%88%98-%EC%A2%85%EC%86%8D%EC%84%B1Functional-Dependency#5-%EB%8B%A4%EC%A4%91%EA%B0%92-%EC%A2%85%EC%86%8D-multi-valued-dependency-5)
    
### Others