---
layout: post
title:  "[QueryDSL] QueryDSL과 프로젝션"
date:   2024-03-17 11:00:00 +0900
categories: JPA
published: false
---

### 기본

#### 프로젝션 대상이 하나인 경우

- 프로젝션 대상이 하나면 타입을 명확하게 지정할 수 있다.

{% highlight java %}
//프로젝션 대상이 하나이기 때문에 String으로 지정할 수 있다.
List<String> result =
    queryFactory
    .select(member.username)
    .from(member)
    .fetch();
{% endhighlight %}

#### 프로젝션 대상이 둘 이상인 경우

- 프로젝션 대상이 둘 이상이면 Tuple을 통해 조회한다.

{% highlight java %}
//프로젝션 대상이 둘 이상이기 때문에 Tuple로 조회해야 한다.
List<Tuple> result =
        queryFactory
        .select(member.username, member.age)
        .from(member)
        .fetch();

for (Tuple tuple : result) {
    String username = tuple.get(member.username);
    Integer age= tuple.get(member.age);
    System.out.println("username = " + username);
    System.out.println("out = " + age);
}
{% endhighlight %}

### DTO 조회

- QueryDSL에서 DTO를 반환할 때는 3가지 방법을 지원한다.
- 종류
    - 프로퍼티 접근
    - 필드 직접 접근
    - 생성자 사용

{% highlight java %}
@Data
public class MemberDto {
    private String username;
    private int age;

    public MemberDto() {

    }
    public MemberDto(String username, int age) {
        this.username = username;
        this.age = age;
    }
}
{% endhighlight %}

#### 프로퍼티 접근

{% highlight java %}
List<MemberDto> result =
    queryFactory
    .select(
        Projections.bean(MemberDto.class, member.username, member.age)
    )
    .from(member)
    .fetch();
{% endhighlight %}

#### 필드 직접 접근

{% highlight java %}
List<MemberDto> result =
    queryFactory
    .select(
        Projections.fields(MemberDto.class, member.username, member.age)
    )
    .from(member)
    .fetch();
{% endhighlight %}

- 별칭이 다른 경우에는 `as(String alias)` 메소드를 사용한다.
{% highlight java %}
List<UserDto> fetch =
queryFactory
.select(Projections.fields(UserDto.class,
member.username.as("name"),
ExpressionUtils.as(
JPAExpressions
.select(memberSub.age.max())
.from(memberSub), "age")
)
).from(member)
.fetch();
{% endhighlight %}

#### 생성자 사용

{% highlight java %}
List<MemberDto> result =
    queryFactory
    .select(
        Projections.fields(MemberDto.class, member.username, member.age)
    )
    .from(member)
    .fetch();
{% endhighlight %}

### @QueryProjection

### 출처

- [실전! Querydsl](https://www.inflearn.com/course/querydsl-%EC%8B%A4%EC%A0%84)