---
layout: post
title:  "JPA Repository"
date:   2023-12-11 22:49:00 +0900
categories: Group&nbsp;:&nbsp;Spring JPA
---

### Repository 제작법
    
1. JPA의 Repository로 사용할 인터페이스를 만든다.
2. 해당 인터페이스에 org.springframework.data.jpa.repository.JpaRepository를 import한다.
3. JpaRepository 클래스를 JpaRepository&lt;Entity형식,ID형식>으로 상속받는다.
    - 예시) public interface BookRepository extends JpaRepository&lt;BookEntity, Long>

### Repository 종류
    
- Repository&lt;T, ID>
- CrudRepository&lt;T, ID>
- PagingAndSortingRepository&lt;T, ID>
- JpaRepository&lt;T, ID>

- T : Entity의 타입클래스, ID : Primary Key의 Type 

### Repository의 기본 메소드 형식
    
- find~ : 특정 조건을 만족하는 데이터를 가져오기
- save~ : 해당 테이블에 데이터를 저장하기
- delete~ : 특정 조건을 만족하는 데이터를 삭제
- flush() : 영속성 컨텍스트의 변경 내용을 DataBase에 동기화
- existsById(ID id) : id값을 통해 데이터 존재 여부 판단 (Boolean 값 리턴)
- count() : 해당 테이블의 전체 데이터 개수를 리턴 (long 값 리턴)

### @Query 어노테이션
    
- JPA의 자동 SQL 생성기능 대신에 직접 쿼리를 작성할수 있게 해주는 어노테이션
    기본 예시)
    {% highlight java %}
    @Query(value = "select * from user limit 1;", nativeQuery = true)
    Map<String, Object> findOneUser();
    {% endhighlight %}

- 옵션
    - value : SQL 쿼리를 작성하는 옵션
    - nativeQuery : 해당 옵션이 추가되어있으면 DB에서 직접 쿼리문을 작성하듯이 작성할수 있게 해준다.

- 주의점
    - 호출하는 테이블명에 반드시 별칭을 추가해서 사용해야 한다.

- 데이터 치환
    - ? 사용 : ?1이나 ?2처럼 각각의 순서에 맞는 숫자를 붙여서 파라미터가 들어갈 순서대로 쿼리에 명시한다.
    - :파라미터명 : :name이나 :age처럼 필요한 파라미터명에 맞춰서 쿼리에 명시하면 된다.
    - 기존에는 @Param("name") String name처럼 파라미터에 어노테이션이 필요했다.
    - 현재는 파라미터명만 잘 맞춰주면 알아서 잘 치환된다. (Spring 4 이상 + Java 8 이상)

### JPA를 통한 페이징 처리
    
- PagingAndSortingRepository 인터페이스의 구현 필요

- Page&lt;VO타입> 객체명 = repository객체.find~(new PageRequest(page, size));
    - page : 찾을 페이지, 시작값 : 0
    - size : 한 페이지의 사이즈, 기본값 : 20

- 컨트롤러에서 Pageable 변수 받기
    - 사용 예시
        {% highlight java %}
        @GetMapping("/users")
        public List<User> findAllUser(Pageable pageable) { ... }   
        //GET /users?page=3&size=10&sort=id,DESC
        {% endhighlight %}

- @PageableDefault (페이징을 위한 기본값 설정 어노테이션)
    - 사용 예시
        {% highlight java %}
        @GetMapping("/users")
        public Lis<User> findAllUser(@PageableDefault(size=100, sort="id", direction = Sort.Direction.DESC) Pageable pageable) { ... } 
        {% endhighlight %}

- 페이징 기본값 설정법 - application.properties
    spring.data.web.pageable.default-page-size=페이지_크기

### 쿼리 메소드란?
    
- 메서드 이름으로 우리가 원하는 기능을 수행할 쿼리가 자동으로 생성해줄수 있도록 일정 규칙에 맞게 이름을 정의하여 사용하는 메서드

### 쿼리 메소드 - 실행문
    
- 데이터 검색 (가독성을 위해 나눠져있을 뿐 모두 결과가 같다.)
    - findBy~
    - readBy~
    - getBy~
    - queryBy~
    - searchBy~
    - streamBy~

- 존재 여부 확인
    - existsBy~

- 개수 확인
    - countBy~

- 데이터 삭제
    - deleteBy~
    - removeBy~

- 처음부터 n개의 데이터 가져오기
    - ~First(숫자)~
    - ~Top(숫자)~

- 중복 제거
    - ~Distinct~

### 쿼리 메소드 - 조건문
    
- 조건 연결
    - ~And~
    - ~Or~

- 조건 부정
    - ~Not~
    - ~IsNot~

- 참/거짓 체크
    - True
    - IsTrue
    - NotFalse
    - IsNotFalse

- 날짜 비교
    - 이전
        - ~Before
        - ~IsBefore
    - 이후
        - ~After
        - ~IsAfter
- 수치 비교
    - 작다
        - ~LessThan
        - ~IsLessThan
    - 작거나 같다
        - ~LessThanEqual
        - ~IsLessThanEqual
    - 크다
        - ~GreaterThan
        - ~IsGreaterThan
    - 크거나 같다
        - ~GreaterThanEqual
        - ~IsGreaterThanEqual

- 범위
    - m에서 n사이에 포함
        - ~Between
        - ~IsBetween
    - m,n,o...중에 포함
        - ~In
        - ~IsIn

- 단어 포함
    - ~로 시작
        - ~StartingWith
        - ~IsStartingWith
        - ~StartsWith
    - ~로 종료
        - ~EndingWith
        - ~IsEndingWith
        - ~EndsWith
    - ~ 포함
        - ~Like
        - ~IsLike
        - Containing
        - IsContaining
        - Contains

- Null 체크
    - Null
    - IsNull
    - NotNull
    - IsNotNull

- Empty 체크
    - Empty
    - IsEmpty
    - NotEmpty
    - IsNotEmpty

### 쿼리 메소드 - 정렬하기
    
- 단순 정렬
    - ~OrderBy칼럼명
    - ~OrderBy칼럼명Asc
    - ~OrderBy칼럼명Desc

- 정렬 방식 추가
    - 사용 예시
        {% highlight java %}
        //List&lt;User> findFirstByName(String name, Sort sort)
        userRepository.findFirstByName("HongGilDong", Sort.by(Order.desc("id"), Order.asc("email")))
        {% endhighlight %}