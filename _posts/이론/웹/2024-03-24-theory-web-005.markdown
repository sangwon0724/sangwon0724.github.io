---
layout: post
title:  "HTTP 상태 코드"
date:   2024-03-24 14:3846:00 +0900
categories: 이론&nbsp;-&nbsp;웹
---

### HTTP 상태 코드란?

- 클라이언트가 보낸 요청의 처리 상태를 응답에서 알려주는 기능
- 클라이언트가 인식할 수 없는 상태 코드를 서버가 반환해도 문제가 없다.
    - 클라이언트는 상위 상태 코드로 해석해서 처리한다. (예시 : 299 → 2XX)
    - 미래에 새로운 상태 코드가 추가되어도 클라이언트를 변경하지 않아도 된다.

### 1XX (Informational)

- 요청이 수신되어 처리 중인 상태
- 거의 사용하지 않는 코드

### 2XX (Successful)

- 요청을 정상적으로 처리한 상태

#### 200 OK

- 요청이 성공한 상태

#### 201 Created

- 요청이 성공해서 새로운 리소스가 생성된 상태
- 생성된 리소스는 응답의 Location 헤더 필드로 식별한다.

#### 202 Accepted

- 요청이 접수되었으나 아직 처리가 완료되지 않은 상태
- 배치 처리 같은 곳에서 사용한다.

#### 204 No Content

- 서버가 요청을 성공적으로 수행했지만, 응답 페이로드 본문에 보낼 데이터가 없는 상태

### 3XX (Redirection)

- 요청을 완료하려면 유저 에이전트의 추가 조치가 필요하다.

#### 리다이렉션

- 웹 브라우저는 3xx 응답의 결과에 Location 헤더가 있으면, Location의 위치로 자동 이동한다.
- 자동 리다이렉트 흐름
    1. 클라이언트가 서버에 요청을 보낸다.
    2. 서버는 3XX 상태 코드와 함께 Location 헤더에 이동할 위치를 명시한다.
    3. 클라이언트는 상태 코드와 Location 헤더를 읽고 Location 헤더에 명시된 위치로 이동한다.
    4. 클라이언트는 3번의 Location 헤더에 명시된 위치에 대해서 요청을 보낸다.
    5. 서버는 클라이언트에게 2XX 상태 코드와 함꼐 응답을 보낸다.
- 리다이렉션 종류
    - 영구 리다이렉션
        - 특정 리소스의 URI가 영구적으로 이동
        - 예시 : `/members` → `/users`
    - 일시 리다이렉션
        - 일시적인 변경
        - 예시 : 주문 완료 후 주문 내역 화면으로 이동
        - PRG(Post/Redirect/Get)라고도 부른다.
    - 특수 리다이렉션
        - 결과 대신 캐시를 사용

#### 300 Multiple Choices

- 사용되지 않는 상태 코드

#### 301 Moved Permanently

- 영구 리다이렉션
- 리소스의 URI가 영구적으로 이동
- 원래의 URL를 사용하지 않음
- 검색 엔진 등에서도 변경을 인지한다.
- 리다이렉트시 요청 메서드가 GET으로 변한다.
- 리다이렉트시 본문이 제거될 수도 있다.

#### 302 Found

- 일시적인 리다이렉션
- 리소스의 URI가 일시적으로 변경된다.
    - 검색 엔진 등에서 URL을 변경하면 안 된다.
- 리다이렉트시 요청 메서드가 GET으로 변한다.
- 리다이렉트시 본문이 제거될 수도 있다.

#### 303 See Other

- 일시적인 리다이렉션
- 리소스의 URI가 일시적으로 변경된다.
    - 검색 엔진 등에서 URL을 변경하면 안 된다.
- 리다이렉트시 요청 메서드가 GET으로 변한다.

#### 304 Not Modified

- 특수 리다이렉션
- 캐시를 목적으로 사용한다.
- 클라이언트에게 리소스가 수정되지 않았음을 알려준다
    - 클라이언트는 로컬 PC에 저장된 캐시를 재사용한다.
    - 캐시로 리다이렉트 한다.
- 304 응답은 로컬 캐시를 사용해야 하기 때문에 응답에 메시지 바디를 포함하면 안된다.
- 조건부 GET, HEAD 요청시 사용한다.


#### 307 Temporary Redirect

- 일시적인 리다이렉션
- 리소스의 URI가 일시적으로 변경된다.
    - 검색 엔진 등에서 URL을 변경하면 안 된다.
- 리다이렉트시 요청 메서드와 본문을 유지한다.

#### 308 Permanent Redirect

- 영구 리다이렉션
- 리소스의 URI가 영구적으로 이동
- 원래의 URL를 사용하지 않음
- 검색 엔진 등에서도 변경을 인지한다.
- 리다이렉트시 요청 메서드와 본문을 유지한다.


### 4XX (Client Error)

- 클라이언트 오류
- 잘못된 문법 등으로 서버가 요청을 수행할 수 없는 상태
- 클라이언트의 요청에 잘못된 문법 등으로 서버가 요청을 수행할 수 없다.
- 오류의 원인이 클라이언트에 있다.
- 클라이언트가 이미 잘못된 요청, 데이터를 보내고 있기 때문에 똑같은 재시도는 항상 실
패한다.

#### 400 Bad Request

- 클라이언트가 잘못된 요청을 해서 서버가 요청을 처리할 수 없는 상태
- 요청 구문, 메시지 등이 잘못된 경우
- 클라이언트는 요청 내용을 다시 검토한 후에 요청을 새로 보내야 한다.
- 예시
    - 요청 파라미터가 잘못된 경우
    - API 스펙이 맞지 않는 경우

#### 401 Unauthorized

- 클라이언트가 해당 리소스에 대한 인증이 필요한 경우
- 인증(Authentication) 되지 않은 경우
- 401 오류 발생시 응답에 WWW-Authenticate 헤더와 함께 인증 방법을 설명한다.
- 인증 (Authentication)
    - 본인이 누구인지 확인하는 것
    - 예시 : 로그인
- 인가 (Authorization)
    - 권한이 허용받는 것
    - 예시 : ADMIN 권한처럼 특정 리소스에 접근할 수 있는 권한

#### 403 Forbidden

- 서버가 요청을 이해했지만 승인을 거부한 상태
- 주로 인증 자격 증명은 있지만, 접근 권한이 불충분한 경우에 해당한다.
- 예시 : 일반 사용자가 ADMIN 권한이 필요한 리소스에 접근하는 경우

#### 404 Not Found

- 요청한 리소스를 찾을 수 없는 경우
- 해당하는 경우
    - 요청 리소스가 서버에 없는 경우
    - 클라이언트가 권한이 부족한 리소스에 접근할 때 해당 리소스를 숨기고 싶은 경우

### 5XX (Server Error)

- 서버 오류
- 요청을 정상적으로 처리하지 못한 상태
- 서버 문제로 오류가 발생한 경우
- 서버에 문제가 있기 때문에 재시도하면 성공할 수도 있다.

#### 500 Internal Server Error

- 서버 문제로 오류 발생한 경우
- 애매한 오류 발생시 반환하는 상태 코드

#### 503 Service Unavailable

- 서비스를 이용할 수 없는 경우
- 서버가 일시적인 과부하 또는 예정된 작업으로 잠시 요청을 처리할 수 없는 상태
- Retry-After 헤더 필드로 얼마뒤에 복구되는지 보낼 수도 있다.

### 출처

- [모든 개발자를 위한 HTTP 웹 기본 지식](https://www.inflearn.com/course/http-%EC%9B%B9-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC#curriculum)