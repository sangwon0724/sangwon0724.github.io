---
layout: post
title:  "FCM"
date:   2024-08-10 16:24:00 +0900
categories: Spring&nbsp;Boot
tags: [FCM]
published: false
---

### FCM이란?

- 플랫폼에 종속되지 않고 푸시 메시지를 전송할 수 있는 교차 플랫폼 메시징 솔루션
- Firebase Cloud Messaging

### 왜 사용할까?

- 플랫폼에 종속되지 않는다.
    - 플랫폼 환경별로 개발해야하는 불현함을 해소한다.
    - Android : GCM (Google Cloud Messaging)
    - iOS : APNS (Apple Push Notification service)
- 사용되는 리소스가 감소한다.
    - 실시간으로 푸시 메시지를 받으려면 사용자는 항상 서버에 접속해있어야 한다.
        - 이는 사용자 기기의 배터리 및 네트워크 리소스를 크게 낭비한다.
    - 클라우드 메시징 서버를 중간다리로 둔다면 낮은 배터리와 네트워크 리소스만 사용해도 된다.
    
### 환경설정

#### 의존성 추가

{% highlight java %}
//build.gradle
implementation 'com.google.firebase:firebase-admin:9.3.0'
{% endhighlight %}

### FirebaseApp에 대한 인스턴스 생성

- 만약에 패키징이 WAR인 경우에는  Resource 클래스를 통해 파일 정보를 불러들여도 된다.
- 다만 패키징이 JAR일 경우에는 경로 문제로 인하여 ResourceLoader를 통해 파일 정보를 불러들여야 한다.

{% highlight java %}
@Slf4j
@Configuration
public class FirebaseConfig {
    @Autowired
    private ResourceLoader resourceLoader;

    private FirebaseApp firebaseApp;

    //@Value("classpath:firebase_service_key.json")
    //private Resource firebaseServiceKey;

    @PostConstruct
    public FirebaseApp initFirebase() {
        try {
            // Service Account를 이용하여 Fireabse Admin SDK 초기화
            /*FileInputStream serviceAccount = new FileInputStream(firebaseServiceKey.getFile());
            FirebaseOptions options = FirebaseOptions.builder()
                    .setCredentials(GoogleCredentials.fromStream(serviceAccount))
                    .build();
            firebaseApp = FirebaseApp.initializeApp(options);*/

            InputStream serviceAccount = resourceLoader.getResource("classpath:firebase_service_key.json").getInputStream();
            FirebaseOptions options = FirebaseOptions.builder()
                    .setCredentials(GoogleCredentials.fromStream(serviceAccount))
                    .build();
            firebaseApp = FirebaseApp.initializeApp(options);
        } catch (Exception e) {
            e.printStackTrace();
            log.error("[FirebaseConfig] " + e.getMessage());
        }

        if(firebaseApp != null){
            log.info("[FirebaseConfig] initialize : " + firebaseApp.getName());
        } else {
            log.info("[FirebaseConfig] firebaseApp is null");
        }

        return firebaseApp;
    }

    @Bean
    public FirebaseMessaging initFirebaseMessaging() {
        FirebaseMessaging instance = null;
        if(firebaseApp != null){
            instance = FirebaseMessaging.getInstance(firebaseApp);
        }
        return instance;
    }
}
{% endhighlight %}

### 출처

- [FCM (Firebase Cloud Messaging) 이란?](https://velog.io/@devapploper/KISS-Series-FCM-%EC%9D%B4%EB%9E%80-Firebase-Cloud-Messaging)
- [[Java] Spring Boot Firebase Cloud Message(FCM) 푸시 메시지 API 구축 -1 : firebase-admin](https://adjh54.tistory.com/432)