### Git 소개 및 기본 개념
- 개념
- 주요 기능
- 다른 버전 관리 시스템과의 비교

### Git 설치 및 초기 설정
- Git을 설치 방법
- 사용자 정보 설정
- 에디터 설정
- `git config --global` 명령어를 통한 전역 설정
- 특정 프로젝트만을 위한 로컬 설정 방법

### 저장소 생성 및 기본 작업 흐름
- Git 저장소를 초기화하고
- 파일을 추가하며
- 변경 사항을 커밋
- .git 폴더의 역할
- 상태 확인 명령어(git status)의 사용법

### 브랜치 관리
- 브랜치 개념
- 브랜치 생성 방법
- 브랜치 전환 방법
- 기능 개발이나 버그 수정을 위한 브랜치 전략
- 효율적인 브랜치 관리 방법

### 병합 및 충돌 해결
- 다양한 병합 방식(merge, rebase)의 차이점과 각 상황에 적합한 방법
- 병합 과정에서 발생할 수 있는 충돌 상황을 인식하고 해결하는 방법

### 원격 저장소 활용
- GitHub과 같은 원격 저장소를 연결하고 활용하는 방법
- 원격 저장소 추가, 푸시, 풀, 클론 등의 명령어를 통한 협업 기초

### 리셋과 리버트로 되돌리기
- 잘못된 커밋을 수정하거나 이전 상태로 되돌리는 다양한 방법
- `git reset`과 `git revert`의 차이점과 적절한 사용 상황

### Pull Request와 협업 워크플로우
- 오픈소스 프로젝트나 팀 프로젝트에서 주로 사용되는 Pull Request 기반의 협업 방식
- 코드 리뷰, 피드백 반영, 변경사항 병합의 전체 과정

### Git 내부 데이터 저장 방식
- Git의 내부 구조인 블랍(Blob), 트리, 커밋, 태그 등에 대한 이해
- Git이 파일의 변경 이력을 추적하고 관리하는 방법